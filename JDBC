# JDBC

Assume place Delhi and place Kashmir. We want apples available in kashmir. We build a road to kashmir and send a vehicle to bring the apples. 
To deal with kashmir people we need a translator as we dont know their local language. 

DELHI ----[ROAD]---------------------- [TRANSLATOR] ---> KASHMIR
     <----------------- VEHICLE [Apple] -----------------
     

DELHI -- is your java application
KASHMIR -- is the database

TRANSLATOR -- driver software
ROAD -- is the connection to database
VEHICLE -- is the sql query, stetement object
APPLE -- ResultSet

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;

public class JdbcExample {
    public static void main(String[] args) {
        String jdbcUrl = "jdbc:mysql://localhost:3306/mydatabase";
        String username = "root";
        String password = "password";

        try {
            // first Load the JDBC driver
            Class.forName("com.mysql.cj.jdbc.Driver");

            // Establish a connection
            Connection connection = DriverManager.getConnection(jdbcUrl, username, password);

            // Create a statement
            Statement statement = connection.createStatement();

            // Execute a query
            String sql = "SELECT * FROM customers";
            ResultSet resultSet = statement.executeQuery(sql);

            // Process the results
            while (resultSet.next()) {
                int id = resultSet.getInt("id");
                String name = resultSet.getString("name");
                System.out.println("ID: " + id + ", Name: " + name);
            }

            // Close the resources
            resultSet.close();
            statement.close();
            connection.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}

Que ) explain various statements available in jdbc ?
Ans ) Statement ( simple sql query w.o any parameters )
      PreparedStatement ( sql query with parameters )
      CallableStatement ( stored producedures )

ResultSet rs = stmt.executeQuery("SELECT * FROM employees");

Connection con = DriverManager.getConnection(url, user, password);
String sql = "SELECT * FROM employees WHERE department = ?";
PreparedStatement preparedStatement = con.prepareStatement(sql);
preparedStatement.setString(1, "Sales");
ResultSet rs = preparedStatement.executeQuery();

Connection con = DriverManager.getConnection(url, user, password);
String sql = "{call getEmployeeById(?)}";
CallableStatement cstmt = con.prepareCall(sql);
cstmt.setInt(1, 1001);
ResultSet rs = cstmt.executeQuery();








